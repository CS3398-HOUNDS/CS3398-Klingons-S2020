{"ast":null,"code":"var _jsxFileName = \"/Users/sohailselky/Documents/GitHub/CS3398-Klingons-S2020/frontend/src/components/CreateGame.js\";\nimport React from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Form from \"react-bootstrap/Form\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Row, Col } from 'react-bootstrap';\nimport '../style.css';\nimport { Formik } from 'formik';\n\nclass CreateGame extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchData = () => {\n      fetch(\"https://my-json-server.typicode.com/CS3398-HOUNDS/API/Questions\", {\n        method: \"GET\",\n        dataType: \"JSON\"\n      }).then(resp => {\n        return resp.json();\n        console.log(resp.json());\n      }).then(data => {\n        this.setState({\n          questionBank: data.results\n        });\n        console.log(data.results);\n      }).catch(error => {\n        console.log(error, \"catch the hoop\");\n      });\n      console.log(this.state);\n    };\n\n    this.state = {\n      questionBank: []\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"https://opentdb.com/api.php?amount=10&category=20&type=multiple\"; //const url = \"http://127.0.0.1:8000/api/1/\";\n\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data);\n    this.setState({\n      questionBank: data.results,\n      loading: false\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"LetterHead\",\n      src: require(\"../imgs/LH4.png\"),\n      style: {\n        width: \"350px\",\n        height: \"auto\",\n        opacity: \"1\",\n        padding: \"2\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Formik, {\n      initialValues: {\n        triviaCategories: \"Sports\",\n        qType: \"Multiple Choice\",\n        questionCount: 2,\n        timerLength: \"15s\"\n      },\n      onSubmit: (values, {\n        setSubmitting,\n        resetForm\n      }) => {\n        // When button submits form and form is in the process of submitting, submit button is disabled\n        setSubmitting(true);\n        console.log(this.state);\n        this.fetchData();\n        setTimeout(() => {\n          //alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 500);\n        /* Resets form after submission is complete\n        resetForm();\n         // Sets setSubmitting to false after form is reset\n        setSubmitting(false);*/\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, ({\n      values,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting\n    }) => React.createElement(Form, {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"triviaCategories\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: \"lg\",\n      lg: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Trivia Category:\"), React.createElement(Col, {\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      onChange: handleChange,\n      value: values.triviaCategories,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"History\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Sports\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Politics\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Music\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Movies\"))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"qType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: \"lg\",\n      lg: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Question Types:\"), React.createElement(Col, {\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      onChange: handleChange,\n      value: values.qType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Multiple Choice\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"True or False\"))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"questionCount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: \"lg\",\n      lg: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Number of Questions:\"), React.createElement(Col, {\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      onChange: handleChange,\n      value: values.questionCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"4\"))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"timerLength\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: \"lg\",\n      lg: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Question Timer:\"), React.createElement(Col, {\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      onChange: handleChange,\n      value: values.timerLength,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"15s\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"30s\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"60s\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"OFF\"))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Create New Game\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default CreateGame;","map":{"version":3,"sources":["/Users/sohailselky/Documents/GitHub/CS3398-Klingons-S2020/frontend/src/components/CreateGame.js"],"names":["React","Container","Button","Form","Row","Col","Formik","CreateGame","Component","constructor","props","fetchData","fetch","method","dataType","then","resp","json","console","log","data","setState","questionBank","results","catch","error","state","componentDidMount","url","response","loading","render","textAlign","require","width","height","opacity","padding","triviaCategories","qType","questionCount","timerLength","values","setSubmitting","resetForm","setTimeout","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Form from \"react-bootstrap/Form\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Row, Col } from 'react-bootstrap';\nimport '../style.css';\nimport { Formik } from 'formik';\n\n\nclass CreateGame extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            questionBank:[]\n        }\n    };\n\n    async componentDidMount(){\n        const url = \"https://opentdb.com/api.php?amount=10&category=20&type=multiple\";\n        //const url = \"http://127.0.0.1:8000/api/1/\";\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log(data);\n        this.setState({questionBank: data.results, loading: false});\n    }\n\n    fetchData = () => {\n        fetch(\"https://my-json-server.typicode.com/CS3398-HOUNDS/API/Questions\", {\n            method: \"GET\",\n            dataType: \"JSON\",\n        })\n            .then((resp) => {\n                return resp.json()\n                console.log(resp.json())\n            })\n            .then((data) => {\n                this.setState({ questionBank: data.results })\n                console.log(data.results)\n            })\n            .catch((error) => {\n                console.log(error, \"catch the hoop\")\n            })\n        console.log(this.state)\n\n    }\n\n    render() {\n        return(\n            <Container style={{textAlign: \"center\"}}>\n\n                <img className={\"LetterHead\"} src={require(\"../imgs/LH4.png\")} style={{width:\"350px\",\n                    height: \"auto\",\n                    opacity: \"1\",\n                    padding:\"2\",\n                    textAlign: \"center\"\n                }}/>\n\n                <Formik initialValues={{\n                    triviaCategories: \"Sports\",\n                    qType: \"Multiple Choice\",\n                    questionCount: 2,\n                    timerLength: \"15s\"}}\n                        onSubmit={(values, {setSubmitting, resetForm}) => {\n                            // When button submits form and form is in the process of submitting, submit button is disabled\n                            setSubmitting(true);\n                            console.log(this.state)\n                            this.fetchData()\n                            setTimeout(() => {\n\n                                //alert(JSON.stringify(values, null, 2));\n                                setSubmitting(false);\n                            }, 500);\n\n                            /* Resets form after submission is complete\n                            resetForm();\n\n                            // Sets setSubmitting to false after form is reset\n                            setSubmitting(false);*/\n                        }}\n                >\n                    {/* Callback function containing Formik state and helpers that handle common form actions */}\n                    {( {values,\n                           handleChange,\n                           handleBlur,\n                           handleSubmit,\n                           isSubmitting }) => (\n                    <Form onSubmit={handleSubmit}>\n                        <br/>\n                        <Form.Group controlId={\"triviaCategories\"}>\n                            <Row>\n                                <Form.Label column={\"lg\"} lg={3}>\n                                    Trivia Category:\n                                </Form.Label>\n                                <Col sm={2}>\n                                    <Form.Control\n                                        as={\"select\"}\n                                        onChange={handleChange}\n                                    value={values.triviaCategories}>\n                                        <option>History</option>\n                                        <option>Sports</option>\n                                        <option>Politics</option>\n                                        <option>Music</option>\n                                        <option>Movies</option>\n                                    </Form.Control>\n                                </Col>\n                            </Row>\n                        </Form.Group>\n                        <br/>\n                        <Form.Group controlId={\"qType\"}>\n                            <Row>\n                                <Form.Label  column=\"lg\" lg={3}>Question Types:</Form.Label>\n                                <Col sm={2}>\n                                    <Form.Control\n                                        as={\"select\"}\n                                        onChange={handleChange}\n                                        value={values.qType}>\n                                        <option>Multiple Choice</option>\n                                        <option>True or False</option>\n                                    </Form.Control>\n                                </Col>\n                            </Row>\n                        </Form.Group>\n                        <br/>\n                        <Form.Group controlId={\"questionCount\"}>\n                            <Row>\n                                <Form.Label  column=\"lg\" lg={3}>Number of Questions:</Form.Label>\n                                <Col sm={2}>\n                                    <Form.Control as={\"select\"}\n                                    onChange={handleChange}\n                                    value={values.questionCount}>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                    </Form.Control>\n                                </Col>\n                            </Row>\n                        </Form.Group>\n                        <br/>\n                        <Form.Group controlId={\"timerLength\"}>\n                            <Row>\n                                <Form.Label  column=\"lg\" lg={3}>Question Timer:</Form.Label>\n                                <Col sm={2}>\n                                    <Form.Control\n                                        as={\"select\"}\n                                    onChange={handleChange}\n                                    value={values.timerLength}>\n                                        <option>15s</option>\n                                        <option>30s</option>\n                                        <option>60s</option>\n                                        <option>OFF</option>\n                                    </Form.Control>\n                                </Col>\n                            </Row>\n                        </Form.Group>\n                        <br/>\n                        <Button type={\"submit\"} disabled={isSubmitting}>Create New Game</Button>\n                        <br/>\n                    </Form>)}\n                </Formik>\n            </Container>\n\n        );\n    }\n}\n\nexport default CreateGame;"]},"metadata":{},"sourceType":"module"}