{"ast":null,"code":"var _jsxFileName = \"/Users/sohailselky/Documents/GitHub/CS3398-Klingons-S2020/frontend/src/components/CreateGame.js\";\nimport React from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Form from \"react-bootstrap/Form\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Row, Col } from 'react-bootstrap';\nimport '../style.css';\nimport { Formik } from 'formik';\n\nclass CreateGame extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchData = (values, questionBank) => {\n      let amount = values.questionCount;\n      let type = \"\";\n      let category = null;\n      let url = \"\";\n      let timer = values.timerLength; //This block builds the URL for the api call to make questions\n\n      if (values.qType == \"Multiple Choice\") {\n        type = \"multiple\";\n      } else {\n        type = \"boolean\";\n      }\n\n      if (values.triviaCategories == \"Sports\") {\n        category = 21;\n      } else if (values.triviaCategories == \"Music\") {\n        category = 21;\n      } else if (values.triviaCategories == \"Politics\") {\n        category = 21;\n      } else if (values.triviaCategories == \"History\") {\n        category = 21;\n      } else {\n        category = 11;\n      }\n\n      if (values.timerLength == \"15s\") {\n        timer = 15;\n      } else if (values.timerLength == \"30s\") {\n        timer = 30;\n      } else if (values.timerLength == \"60s\") {\n        timer = 60;\n      } else {\n        timer = 0;\n      }\n\n      this.type = type, this.timer = timer;\n      console.log(this.state); //set the url\n\n      {\n        {\n          url = \"https://opentdb.com/api.php?amount=\" + amount + \"&category=\" + category + \"&difficulty=medium&type=\" + type;\n        }\n      }\n      console.log(url);\n      fetch(url, {\n        method: \"GET\",\n        dataType: \"JSON\"\n      }).then(resp => {\n        return resp.json();\n      }).then(data => {\n        this.setProps({\n          questionBank: data.results\n        });\n      }).catch(error => {\n        console.log(error, \"catch the hoop\");\n      });\n    };\n\n    this.state = {};\n    let questionBank = [];\n    let _timer = null;\n    let _type = \"\";\n    this.questionBank = this.questionBank.bind(this);\n    this.timer = this.timer.bind(this);\n    this.type = this.type.bind(this);\n  }\n\n  render() {\n    return React.createElement(Container, {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"LetterHead\",\n      src: require(\"../imgs/LH4.png\"),\n      style: {\n        width: \"350px\",\n        height: \"auto\",\n        opacity: \"1\",\n        padding: \"2\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Formik, {\n      initialValues: {\n        triviaCategories: \"Sports\",\n        qType: \"Multiple Choice\",\n        questionCount: 2,\n        timerLength: \"15s\"\n      },\n      onSubmit: (values, {\n        setSubmitting,\n        resetForm\n      }) => {\n        // When button submits form and form is in the process of submitting, submit button is disabled\n        setSubmitting(true);\n        this.fetchData(values);\n        setTimeout(() => {\n          //alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 500);\n        /* Resets form after submission is complete\n        resetForm();\n         // Sets setSubmitting to false after form is reset\n        setSubmitting(false);*/\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, ({\n      values,\n      handleChange,\n      handleSubmit,\n      isSubmitting\n    }) => React.createElement(Form, {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"triviaCategories\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: \"lg\",\n      lg: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Trivia Category:\"), React.createElement(Col, {\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      onChange: handleChange,\n      value: values.triviaCategories,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"History\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Sports\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Politics\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Music\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Movies\"))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"qType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: \"lg\",\n      lg: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Question Types:\"), React.createElement(Col, {\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      onChange: handleChange,\n      value: values.qType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Multiple Choice\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"True or False\"))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"questionCount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: \"lg\",\n      lg: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Number of Questions:\"), React.createElement(Col, {\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      onChange: handleChange,\n      value: values.questionCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"4\"))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"timerLength\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: \"lg\",\n      lg: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Question Timer:\"), React.createElement(Col, {\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      onChange: handleChange,\n      value: values.timerLength,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"15s\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"30s\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"60s\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"OFF\"))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Create New Game\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default CreateGame;","map":{"version":3,"sources":["/Users/sohailselky/Documents/GitHub/CS3398-Klingons-S2020/frontend/src/components/CreateGame.js"],"names":["React","Container","Button","Form","Row","Col","Formik","CreateGame","Component","constructor","props","fetchData","values","questionBank","amount","questionCount","type","category","url","timer","timerLength","qType","triviaCategories","console","log","state","fetch","method","dataType","then","resp","json","data","setProps","results","catch","error","bind","render","textAlign","require","width","height","opacity","padding","setSubmitting","resetForm","setTimeout","handleChange","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Form from \"react-bootstrap/Form\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Row, Col } from 'react-bootstrap';\nimport '../style.css';\nimport { Formik } from 'formik';\n\n\nclass CreateGame extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n        let questionBank = [];\n        let timer = null;\n        let type = \"\";\n        this.questionBank = this.questionBank.bind(this);\n        this.timer = this.timer.bind(this);\n        this.type = this.type.bind(this);\n    };\n\n// This is the main logic for submission button. Its so large because it has to set states, calculate URL and handle the\n//fetch. After execution, question data is held in (this.state.questionBank)\n    fetchData = (values, questionBank) => {\n        let amount = values.questionCount;\n        let type = \"\";\n        let category = null;\n        let url = \"\";\n        let timer = values.timerLength;\n\n        //This block builds the URL for the api call to make questions\n        if (values.qType == \"Multiple Choice\") {\n            type = \"multiple\"\n        }else{\n            type = \"boolean\"\n        }\n        if (values.triviaCategories == \"Sports\"){\n            category = 21\n        } else if (values.triviaCategories == \"Music\"){\n            category = 21\n        } else if (values.triviaCategories == \"Politics\"){\n            category = 21\n        } else if (values.triviaCategories == \"History\") {\n            category = 21\n        }else{\n            category = 11\n        }\n        if (values.timerLength == \"15s\"){\n            timer = 15\n        } else if (values.timerLength == \"30s\"){\n            timer = 30\n        } else if (values.timerLength == \"60s\"){\n            timer = 60\n        }else{\n            timer = 0\n        }\n            this.type = type,\n            this.timer = timer\n\n        console.log(this.state);\n        //set the url\n        {{url = \"https://opentdb.com/api.php?amount=\" + amount + \"&category=\" + category + \"&difficulty=medium&type=\" + type}}\n        console.log(url);\n            fetch(url, {\n            method: \"GET\",\n            dataType: \"JSON\",\n        })\n            .then((resp) => {\n                return resp.json()\n            })\n            .then((data) => {\n                this.setProps({ questionBank: data.results })\n            })\n            .catch((error) => {\n                console.log(error, \"catch the hoop\")\n            })\n    };\n\n    render() {\n        return(\n            <Container style={{textAlign: \"center\"}}>\n\n                <img className={\"LetterHead\"} src={require(\"../imgs/LH4.png\")} style={{width:\"350px\",\n                    height: \"auto\",\n                    opacity: \"1\",\n                    padding:\"2\",\n                    textAlign: \"center\"\n                }}/>\n\n                <Formik initialValues={{\n                    triviaCategories: \"Sports\",\n                    qType: \"Multiple Choice\",\n                    questionCount: 2,\n                    timerLength: \"15s\"}}\n                        onSubmit={(values, {setSubmitting, resetForm}) => {\n                            // When button submits form and form is in the process of submitting, submit button is disabled\n                            setSubmitting(true);\n                            this.fetchData(values)\n                            setTimeout(() => {\n\n                                //alert(JSON.stringify(values, null, 2));\n                                setSubmitting(false);\n                            }, 500);\n\n                            /* Resets form after submission is complete\n                            resetForm();\n\n                            // Sets setSubmitting to false after form is reset\n                            setSubmitting(false);*/\n                        }}\n                >\n                    {/* Callback function containing Formik state and helpers that handle common form actions */}\n                    {( {values,\n                           handleChange,\n\n                           handleSubmit,\n                           isSubmitting }) => (\n                    <Form onSubmit={handleSubmit}>\n                        <br/>\n                        <Form.Group controlId={\"triviaCategories\"}>\n                            <Row>\n                                <Form.Label column={\"lg\"} lg={3}>\n                                    Trivia Category:\n                                </Form.Label>\n                                <Col sm={2}>\n                                    <Form.Control\n                                        as={\"select\"}\n                                        onChange={handleChange}\n                                    value={values.triviaCategories}>\n                                        <option>History</option>\n                                        <option>Sports</option>\n                                        <option>Politics</option>\n                                        <option>Music</option>\n                                        <option>Movies</option>\n                                    </Form.Control>\n                                </Col>\n                            </Row>\n                        </Form.Group>\n                        <br/>\n                        <Form.Group controlId={\"qType\"}>\n                            <Row>\n                                <Form.Label  column=\"lg\" lg={3}>Question Types:</Form.Label>\n                                <Col sm={2}>\n                                    <Form.Control\n                                        as={\"select\"}\n                                        onChange={handleChange}\n                                        value={values.qType}>\n                                        <option>Multiple Choice</option>\n                                        <option>True or False</option>\n                                    </Form.Control>\n                                </Col>\n                            </Row>\n                        </Form.Group>\n                        <br/>\n                        <Form.Group controlId={\"questionCount\"}>\n                            <Row>\n                                <Form.Label  column=\"lg\" lg={3}>Number of Questions:</Form.Label>\n                                <Col sm={2}>\n                                    <Form.Control as={\"select\"}\n                                    onChange={handleChange}\n                                    value={values.questionCount}>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                    </Form.Control>\n                                </Col>\n                            </Row>\n                        </Form.Group>\n                        <br/>\n                        <Form.Group controlId={\"timerLength\"}>\n                            <Row>\n                                <Form.Label  column=\"lg\" lg={3}>Question Timer:</Form.Label>\n                                <Col sm={2}>\n                                    <Form.Control\n                                        as={\"select\"}\n                                    onChange={handleChange}\n                                    value={values.timerLength}>\n                                        <option>15s</option>\n                                        <option>30s</option>\n                                        <option>60s</option>\n                                        <option>OFF</option>\n                                    </Form.Control>\n                                </Col>\n                            </Row>\n                        </Form.Group>\n                        <br/>\n                        <Button type={\"submit\"} disabled={isSubmitting}>Create New Game</Button>\n                        <br/>\n                    </Form>)}\n                </Formik>\n            </Container>\n\n        );\n    }\n}\n\nexport default CreateGame;"]},"metadata":{},"sourceType":"module"}