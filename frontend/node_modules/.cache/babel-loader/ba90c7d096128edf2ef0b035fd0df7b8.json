{"ast":null,"code":"var _jsxFileName = \"/Users/sohailselky/Documents/GitHub/CS3398-Klingons-S2020/frontend/src/components/CreateGame.js\";\nimport React from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Form from \"react-bootstrap/Form\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Row, Col } from 'react-bootstrap';\nimport '../style.css';\nimport { Formik } from 'formik';\n\nclass CreateGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      triviaCategory: null,\n      qType: null,\n      questionCount: null,\n      timers: null,\n      timerLength: null\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {// this.setState({ category : event.target.value});\n  }\n\n  handleSubmit(event) {\n    console.log(this.state);\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"LetterHead\",\n      src: require(\"../imgs/LH3.png\"),\n      style: {\n        maxWidth: \"25%\",\n        height: \"auto\",\n        opacity: \"1\",\n        padding: \"2\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Formik, {\n      initialValues: {\n        tryiviaCategories: \"Sports\",\n        qType: 1,\n        questionCount: 10,\n        timers: 1,\n        timerLength: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting\n    }) => React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, console.log(values), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"categoryChoice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: \"lg\",\n      lg: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Trivia Category:\"), React.createElement(Col, {\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.triviaCategory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"History\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Sports\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Politics\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Music\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Movies\"))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"typeChoice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: \"lg\",\n      lg: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Question Types:\"), React.createElement(Col, {\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.triviaCategory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Multiple Choice\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"True or False\"))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"questionCount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: \"lg\",\n      lg: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Number of Questions:\"), React.createElement(Col, {\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.questionCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"5\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"10\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"15\"))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"timersChoice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: \"lg\",\n      lg: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Questions Timers:\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      inline: true,\n      defaultChecked: \"True\",\n      name: \"qTimer\",\n      type: \"radio\",\n      id: 'qTimerOn',\n      label: `On`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(Form.Check, {\n      inline: true,\n      name: \"qTimer\",\n      type: \"radio\",\n      id: 'qTimerOff',\n      label: \"Off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"timerDifficulty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: \"lg\",\n      lg: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Timer Length:\"), React.createElement(Col, {\n      sm: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.timerLength,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"10s\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"15s\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"20s\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"30s\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"60s\"))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Create New Game\")), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default CreateGame;","map":{"version":3,"sources":["/Users/sohailselky/Documents/GitHub/CS3398-Klingons-S2020/frontend/src/components/CreateGame.js"],"names":["React","Container","Button","Form","Row","Col","Formik","CreateGame","Component","constructor","props","state","triviaCategory","qType","questionCount","timers","timerLength","handleSubmit","bind","handleChange","event","console","log","preventDefault","stopPropagation","render","require","maxWidth","height","opacity","padding","textAlign","tryiviaCategories","values","errors","touched","handleBlur","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Form from \"react-bootstrap/Form\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Row, Col } from 'react-bootstrap';\nimport '../style.css';\nimport { Formik } from 'formik';\n\nclass CreateGame extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            triviaCategory: null,\n            qType: null,\n            questionCount: null,\n            timers: null,\n            timerLength: null\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    };\n    handleChange(event) {\n       // this.setState({ category : event.target.value});\n    }\n    handleSubmit(event) {\n        console.log(this.state);\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    render() {\n        return(\n            <Container>\n                <Col >\n                <img className={\"LetterHead\"} src={require(\"../imgs/LH3.png\")} style={{maxWidth:\"25%\",\n                    height: \"auto\",\n                    opacity: \"1\",\n                    padding:\"2\",\n                    textAlign: \"center\"\n                }}/>\n                <Formik initialValues={{\n                    tryiviaCategories: \"Sports\",\n                    qType: 1,\n                    questionCount: 10,\n                    timers: 1,\n                    timerLength: 30}}>\n                    {/* Callback function containing Formik state and helpers that handle common form actions */}\n                    {( {values,\n                           errors,\n                           touched,\n                           handleChange,\n                           handleBlur,\n                           handleSubmit,\n                           isSubmitting }) => (\n                    <Form onSubmit={this.handleSubmit}>{console.log(values)}\n                        <br/>\n                        <Form.Group controlId={\"categoryChoice\"}>\n                            <Row>\n                                <Form.Label column={\"lg\"} lg={3}>\n                                    Trivia Category:\n                                </Form.Label>\n                                <Col sm={2}>\n                                    <Form.Control\n                                        as={\"select\"}\n                                        onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.triviaCategory}>\n                                        <option>History</option>\n                                        <option>Sports</option>\n                                        <option>Politics</option>\n                                        <option>Music</option>\n                                        <option>Movies</option>\n                                    </Form.Control>\n                                </Col>\n                            </Row>\n                        </Form.Group>\n                        <br/>\n                        <Form.Group controlId={\"typeChoice\"}>\n                            <Row>\n                                <Form.Label  column=\"lg\" lg={3}>Question Types:</Form.Label>\n                                <Col sm={2}>\n                                    <Form.Control\n                                        as={\"select\"}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.triviaCategory}>\n                                        <option>Multiple Choice</option>\n                                        <option>True or False</option>\n                                    </Form.Control>\n                                    {/*<Form.Control\n                                        type={\"checkbox\"}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.qType}>\n                                    <Form.Check\n                                        type={\"checkbox\"}\n                                        id={'TF'}\n                                        label={`True/False`}\n                                    />\n                                    <Form.Check\n                                        defaultChecked={\"True\"}\n                                        type={\"checkbox\"}\n                                        id={'MC'}\n                                        label={`Multiple Choice`}\n                                    />\n                                    </Form.Control>*/}\n                                </Col>\n                            </Row>\n                        </Form.Group>\n                        <br/>\n                        <Form.Group controlId={\"questionCount\"}>\n                            <Row>\n                                <Form.Label  column=\"lg\" lg={3}>Number of Questions:</Form.Label>\n                                <Col sm={2}>\n                                    <Form.Control as={\"select\"}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.questionCount}>\n                                        <option>5</option>\n                                        <option>10</option>\n                                        <option>15</option>\n                                    </Form.Control>\n                                </Col>\n                            </Row>\n                        </Form.Group>\n                        <br/>\n                        <Form.Group controlId={\"timersChoice\"}>\n                            <Row>\n                                <Form.Label  column=\"lg\" lg={3}>Questions Timers:</Form.Label>\n                                <Col>\n                                    {/*<Form.Control\n                                        type={\"checkbox\"}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.timers}>*/}\n                                    <Form.Check\n                                        inline\n                                        defaultChecked={\"True\"}\n                                        name={\"qTimer\"}\n                                        type={\"radio\"}\n                                        id={'qTimerOn'}\n                                        label={`On`}\n                                    />\n                                    <Form.Check\n                                        inline\n                                        name={\"qTimer\"}\n                                        type={\"radio\"}\n                                        id={'qTimerOff'}\n                                        label={\"Off\"}\n                                    />\n                                    {/*</Form.Control>*/}\n                                </Col>\n                            </Row>\n                        </Form.Group>\n                        <br/>\n                        <Form.Group controlId={\"timerDifficulty\"}>\n                            <Row>\n                                <Form.Label  column=\"lg\" lg={3}>Timer Length:</Form.Label>\n                                <Col sm={1}>\n                                    <Form.Control\n                                        as={\"select\"}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.timerLength}>\n                                        <option>10s</option>\n                                        <option>15s</option>\n                                        <option>20s</option>\n                                        <option>30s</option>\n                                        <option>60s</option>\n                                    </Form.Control>\n                                </Col>\n                            </Row>\n                        </Form.Group>\n                        <br/>\n                        <Col></Col><Col>\n                        <Button type={\"submit\"}>Create New Game</Button></Col>\n                        <Col></Col>\n                        <br/>\n                    </Form>)}\n                </Formik>\n            </Col>\n            </Container>\n\n        );\n    }\n}\n\nexport default CreateGame;"]},"metadata":{},"sourceType":"module"}